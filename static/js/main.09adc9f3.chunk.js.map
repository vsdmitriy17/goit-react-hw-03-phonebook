{"version":3,"sources":["App.module.css","components/filter/Filter.module.css","components/contactList/ContactList.jsx","components/contactForm/ContactForm.jsx","components/filter/Filter.jsx","App.jsx","index.js","components/contactForm/ContactForm.module.css","components/contactList/ContactList.module.css"],"names":["module","exports","ContactList","contacts","onDeleteContact","map","contact","className","styles","contactList_item","item_text","name","item_span","number","type","item_btn","onClick","id","ContactForm","state","handleSubmit","evt","preventDefault","data","nanoid","props","onSubmit","resetForm","handleInputChange","setState","currentTarget","value","this","form","formLabel","pattern","title","required","onChange","formInput","formBtn","Component","Filter","onChangeFilter","filter_label","filter_input","App","filter","formSubmit","prevState","find","alert","deleteContact","currentId","changeFilter","getVisibleContacts","filterNormalized","toLowerCase","includes","parsedContacts","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","visibleContacts","container","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.09adc9f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3z4T3\",\"title\":\"App_title__1xltE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_label\":\"Filter_filter_label__2Ospe\",\"filter_input\":\"Filter_filter_input__2jCsj\"};","import styles from './ContactList.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function ContactList({ contacts, onDeleteContact }) {\n    return (\n        <ul>\n            {contacts.map(contact => {\n                return (\n                    <li key={contact.id} className={styles.contactList_item}>\n                        <p className={styles.item_text}>{contact.name}: <span className={styles.item_span}>{contact.number}</span></p>\n                        <button type=\"button\" className={styles.item_btn} onClick={() => onDeleteContact(contact.id)}>Delete</button>\n                    </li>\n                )\n            })}\n        </ul>\n    );\n};\n\nContactList.propTypes = {\n    contacts: PropTypes.array.isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n}\n","import React, { Component } from 'react';\nimport { nanoid } from \"nanoid\";\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n    state = {\n        name: '',\n        number: ''\n    }\n\n    handleSubmit = evt => {\n        evt.preventDefault();\n        const data = {\n            id: nanoid(),\n            ...this.state,\n        }\n        this.props.onSubmit(data);\n        this.resetForm();\n    }\n\n    handleInputChange = evt => {\n        this.setState({[evt.currentTarget.name]: evt.currentTarget.value});\n    }\n\n    resetForm = () => {\n        this.setState({\n            name: '',\n            number: ''\n        });\n    }\n    \n    render() {\n        return (\n            <form onSubmit={this.handleSubmit} className={styles.form}>\n                <label className={styles.formLabel}>\n                    Name\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                        value={this.state.name}\n                        onChange={this.handleInputChange}\n                        className={styles.formInput}\n                    />\n                </label>\n\n                <label className={styles.formLabel}>\n                    Number\n                    <input\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                        value={this.state.number}\n                        onChange={this.handleInputChange}\n                        className={styles.formInput}\n                    />\n                </label>\n\n                <button type=\"submit\" className={styles.formBtn}>Add contact</button>\n            </form>\n        );\n    }\n};\n\nexport default ContactForm;","import styles from './Filter.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Filter({value, onChangeFilter})  {\n    return (\n        <label className={styles.filter_label}>\n            Filter names\n            <input\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Enter name\"\n                value={value}\n                className={styles.filter_input}\n                onChange={onChangeFilter}\n            />\n        </label>\n    );\n};\n\nFilter.propTypes = {\n    value: PropTypes.string.isRequired,\n    onChangeFilter: PropTypes.func.isRequired,\n}","import React, { Component } from 'react';\nimport styles from './App.module.css';\nimport ContactList from './components/contactList/ContactList.jsx';\nimport ContactForm from './components/contactForm/ContactForm.jsx';\nimport Filter from './components/filter/Filter.jsx';\n\nclass App extends Component {\n    state = {\n        contacts: [\n            {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n            {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n            {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n            {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n        ],\n        filter: ''\n    }\n\n    componentDidMount() {\n        const parsedContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n        if (parsedContacts) {\n            this.setState({ contacts: parsedContacts });\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.contacts !== prevState.contacts) {\n            localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n        };\n    }\n\n    formSubmit = data => {\n        this.setState(prevState => {\n            const isNameExist = prevState.contacts.find(contact => contact.name === data.name);\n            return (isNameExist ? alert(`${data.name} is already in contacts`) : {...prevState, contacts: [data, ...prevState.contacts]}); \n        })\n    }\n\n    deleteContact = (currentId) => {\n        this.setState(prevState => {\n            return {\n                ...prevState,\n                contacts: prevState.contacts.filter(contact => contact.id !== currentId),\n            }\n        })\n    }\n\n    changeFilter = (evt) => {\n        this.setState({\n            ...this.state,\n            filter: evt.currentTarget.value,\n        })\n    }\n\n    getVisibleContacts = () => {\n        const filterNormalized = this.state.filter.toLowerCase();\n        return this.state.contacts.filter(contact => contact.name.toLowerCase().includes(filterNormalized));\n    }\n    \n    render() {\n        const visibleContacts = this.getVisibleContacts();\n\n        return (\n            <div className={styles.container}>\n                <h1 className={styles.title}>Phonebook</h1>\n                <ContactForm onSubmit={this.formSubmit}/>\n\n                <h2 className={styles.title}>Contacts</h2>\n                <Filter value={this.state.filter} onChangeFilter={this.changeFilter}/>\n                <ContactList contacts={visibleContacts} onDeleteContact={this.deleteContact}/>\n            </div>\n        );\n    };\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport './index.css';\n// import 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__266Pb\",\"formLabel\":\"ContactForm_formLabel__kqOj0\",\"formInput\":\"ContactForm_formInput__km1Og\",\"formBtn\":\"ContactForm_formBtn__3Bxpa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList_item\":\"ContactList_contactList_item__3-7mn\",\"item_text\":\"ContactList_item_text__3ga8h\",\"item_span\":\"ContactList_item_span__2U5JH\",\"item_btn\":\"ContactList_item_btn__26YXH\"};"],"sourceRoot":""}